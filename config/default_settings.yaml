
# list of observables to expect from the get_all function call
# The returned dict will use those as keys. Order matters.

get_all_fields:
  - pressure
  - flow
  - volume
  - peak
  - peep
  - plateau
  - tidal_volume
  - minute_volume_inferred
  - minute_volume_measured
  - respiratory_rate
  - i_to_e_ratio
  - cstat
  - apnea_time
  - battery_low
  - battery_charging
  

# Conversion factors to apply to the values from the get_all
#conversions:
#    pressure: 1.01972 # mbar to cmH2O
#    peak: 1.01972 # mbar to cmH2O

# watchdog reset interval time in seconds
wdinterval: 1

# Time interval used to check for alarms
alarminterval: 1

# Time [ms] required to hold down UNLOCK before screen is unlocked
unlockscreen_interval: 2000
# Unlock code: must use digits from 1-5
unlockscreen_code: "32115"

# length of time to display on graphs (s)
display_time: 11

# time in seconds between two data retrieval
fastdata_interval: 0.1

# time in seconds between two status checks
slowdata_interval: 1




# This is the string returned by the ESP in case of success
return_success_code: 'OK'



# Thickness of the lines drawn in the plots
line_width: 2

# The widht of the line that draws the axes
axis_line_width: 1

# The color used to draw the axes
axis_line_color: "rgb(255,228,181)"

# Minimum number of Y axis major (labeled) ticks
n_major_ticks: 4

# Minimum number of minor (unlabeled) ticks
n_minor_ticks: 5

# The width where the Y axis lable and ticks are
left_ax_label_space: 60

# Shows the values that will trigger the alarms directly on the plots
show_safe_ranges_on_graphs: True

# Toggles the x axis labels in the graphs (specifcally, the 'Time [s]' label)
show_x_axis_labels: True

# Toggles the x axis ticks in the graphs (specifcally, the numbers on the x axis)
show_x_axis_ticks: True

# Toggles between scrolling plots and looping plots
use_looping_plots: True

# Control Start/Stop Auto/Man behavior
start_mode_timeout: 2000 # [ms] between pressing Start and allowing Stop (max 3000)


# Setup monitors (key value monitor_* must match widget name in mainwindow.ui)
# Variables to display in the graphs are in plot_var 
# and the must match names in the ESP or an available function
#
#
# Monitors are defined by the following parameters:
#
# name: The displayed, labelled name of the monitor.
# init: The initial value of the monitor before updated.
# step: (Optional, default 1) The minimum change measured by the monitor.
# dec_precision: (Optional, default 0) The number of decimal positions to display.
# units: (Optional) The displayed units
# observable: Reference to the data type that the monitor is displayed (ref. "get_all_fields" above")
# alarmcolor: (Optional, default red) The color that the monitor will turn on alarm.
# color: (Optional, default white) The text color of the monitor.
# disp_type: (Optional) The alternate display type of the monitor.
#       None: Display auto scaling text.
#       bar [low] [high]: Show a progress bar with minimum [low] and maximum [high].
monitors:
    
    peak: 
        name: "Pmax<sub>insp</sub>" 
        init: 40
        step: 1
        dec_precision: 0
        units: "[cmH<sub>2</sub>O]"
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: peak
    
     peep: 
        name: "PEEP"
        init: 60
        step: 1
        units: "[cmH<sub>2</sub>O]"
        dec_precision: 0
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: peep
    
    plateau:
        name: "Plataeu Pressure"
        init: 35
        step: 1
        dec_precision: 0
        units: "[cmH<sub>2</sub>O]"
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: plateau
    
    tidal_volume: 
        name: "V<sub>tidal</sub>"
        init: 100
        step: 1
        dec_precision: 0
        units: "[ml]"
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: tidal_volume

    minute_volume_measured: 
        name: "MVE<sub>meas</sub>"
        init: 100
        step: 1
        dec_precision: 1
        units: "[slpm]"
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: minute_volume_measured
    
    minute_volume_inferred:
        name: "MVE<sub>meas</sub>"
        init: 100
        step: 1
        dec_precision: 1
        units: "[slpm]"
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: minute_volume_inferred   

    respiratory_rate: 
        name: "Meas. RR"
        init: 60
        step: 1
        units: "[bpm]"
        dec_precision: 0
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: respiratory_rate
    
    i_to_e_ratio:
        name: "I:E"
        init: 1
        step: 1
        units: ""
        dec_precision: 0
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: i_to_e_ratio
    
    cstat:
        name: "C<sub>stat<\sub>"
        init: 50
        step: 1
        dec_precision: 0
        units: "[mL/cmH<sub>2</sub>O]"
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: cstat
    
    apnea_time:
        name: "Apnea Time"
        init: 10
        step: 1
        dec_precision: 1
        units: "[s]"
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: apnea_time
        
   
    battery_low: 
        name: "Battery State"
        init: 100 
        step: 1
        map:
            0: "Charged"
            1: "Low Batt"
        units: null
        dec_precision: 0
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: battery_low


    battery_charging: 
        name: "Power Source"
        init: 100 
        step: 1
        map:
          0: "AC"
          1: "Battery"
        units: null
        dec_precision: 0
        color: "rgb(255,255,255)"
        alarmcolor: "red"
        observable: battery_charging



    

displayed_monitors:
    - peak
    - peep
    - minute_volume_measured
    - tidal_volume
    - respiratory_rate
    - i_to_e_ratio
    - cstat
    - apnea_time
    - battery_low
    - battery_charging
    
    

alarms:
#    - min: Minimum value that can be set for setmin/setmax
#    - max: Maximum value that can be set for setmin/setmax
#    - setmin: Alarm if value below this (if None - no lower bound)
#    - setmax: Alarm if value above this  (if None - no upper bound)
#    - linked_monitor: Name of the monitor connected to this observable
#    - observable: Name of this observable
    

    peak:
        min: 4
        setmin: 4
        max: 110
        setmax: 40
        under_threshold_code: 1
        over_threshold_code: 1
        observable: peak
        linked_monitor: peak
        priority: "high"
        
    peep:
        min: -30
        setmin: 0
        max: 30
        setmax: 10
        under_threshold_code: 262144
        over_threshold_code: 524288
        observable: peep
        linked_monitor: peep
        priority: "low"

    tidal_volume:
        min: 10
        setmin: 250
        max: 3000
        setmax: 1000
        under_threshold_code: 16384
        over_threshold_code: 32768
        observable: tidal_volume
        linked_monitor: tidal_volume
        priority: "low"
        
    minute_volume:
        min: 0.1
        setmin: 4.8
        max: 50
        setmax: 12
        under_threshold_code: 1
        over_threshold_code: 1
        observable: minute_volume_measured
        linked_monitor: minute_volume_measured
        priority: "high"

    respiratory_rate:
        min: 0
        setmin:0
        max: 99
        setmax: 40
        under_threshold_code: 1048576
        over_threshold_code: 2097152
        observable: respiratory_rate
        linked_monitor: respiratory_rate
        priority: "low"
    
    battery_low:
        min: null
        max: 1
        under_threshold_code: 199
        over_threshold_code: null
        observable: battery_low
        linked_monitor: battery_low
        priority: "high"

    battery_charge:
        min: 0
        max: null
        under_threshold_code: null
        over_threshold_code: 16
        observable: battery_charge
        linked_monitor: battery_charge
        priority: "low"


plots:
    plot_top: 
        name: "Pressure"
        min: -40
        max: 40
        units: "[cmH<sub>2</sub>O]"
        color: "rgb(255,255,0)"
        observable: pressure

    plot_mid: 
        name: "Flow"
        min: -100
        max: 100
        units: "[l/m]"
        color: "rgb(50,205,50)"
        observable: flow

    plot_bot: 
        name: "V<sub>tidal</sub>"
        min: 0
        max: 1500
        units: "[mL]"
        color: "rgb(0,255,255)"
        observable: volume
